import { AccountController } from "@/infra/http/AccountController";
import { AccountRepositoryDatabase } from "@/infra/repositories/AccountRepositoryDatabase";
import { ExpressAdapter } from "@/infra/http/ExpressAdapter";
import { GetAccountById } from "@/application/usecases/GetAccount";
import { GetRide } from "@/application/usecases/GetRide";
import { PGAdapter } from "@/infra/database/PGAdapter";
import { RequestRide } from "@/application/usecases/RequestRide";
import { RideController } from "@/infra/http/RideController";
import { RideRepositoryDatebase } from "@/infra/repositories/RideRepositoryDatebase";
import { Signup } from "@/application/usecases/Signup";

const httpServer = new ExpressAdapter();
const connection = new PGAdapter();
const accountRepository = new AccountRepositoryDatabase(connection);
const signup = new Signup(accountRepository);
const getAccountById = new GetAccountById(accountRepository);
new AccountController(httpServer, signup, getAccountById);
const rideRepository = new RideRepositoryDatebase(connection);
const requestRide = new RequestRide(rideRepository, accountRepository);
const getRide = new GetRide(rideRepository);
new RideController(httpServer, requestRide, getRide);
httpServer.listen(3000);
